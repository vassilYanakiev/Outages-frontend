{"version":3,"sources":["components/header/header.component.jsx","components/search-box.component.jsx","components/current-alarms.component.jsx","components/flapping-alarms.component.jsx","components/recent-alarms.component.jsx","components/all-alarms.component.jsx","components/add-alarm.component.jsx","AppRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","className","to","SearchBox","props","type","placeholder","onChange","onSearchChange","CurrentAlarms","event","setState","searchField","target","value","state","alarms","fetch","proxyUrl","then","response","json","recent","this","filteredalarms","filter","alarm","service_id","toString","includes","toLowerCase","duration","startTime","Alert","variant","striped","keyField","data","columns","dataField","text","sort","Component","FlappingAlarms","amount_outages","end","start","sum_outages","RecentAlarms","AllAlarms","AddAlarm","useState","setAlarm","setStart","setDuration","alarmInstance","parseInt","setShow","style","marginLeft","background","height","justifycontent","marginTop","width","Form","Row","Label","column","lg","Col","xs","Control","size","e","Button","onClick","a","method","headers","body","JSON","stringify","ok","alert","AppRouter","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cecd438e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './header.styles.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst Header= function () {\r\n\r\n\r\nreturn(\r\n\r\n      <div className=\"sticky\" >\r\n      <div className='headerLight'>\r\n          \r\n          <button className=\"logo-container\">\r\n            ALARM Manager\r\n          </button>             \r\n\r\n              <div className=\"options\">\r\n              <button className=\"buttonh2\">\r\n                  <Link className='option' to='/all'>\r\n                    All\r\n                  </Link>\r\n                </button>\r\n                <button className=\"buttonh2\">\r\n                  <Link className='option' to='/current'>\r\n                    Current\r\n                  </Link>\r\n                </button>\r\n                <button className=\"buttonh2\">\r\n                <Link className='option' to='/recent'>\r\n                    Recent\r\n                </Link>\r\n                </button>\r\n                <button className=\"buttonh2\">\r\n                <Link className='option' to='/flapping'>\r\n                    Flapping\r\n                </Link>\r\n                </button>\r\n                <button className=\"buttonh2\">\r\n                <Link className='option' to='/add'>\r\n                    Add \r\n                </Link>\r\n                </button>\r\n\r\n            </div>      \r\n          </div>        \r\n           \r\n          </div>\r\n      \r\n      \r\n\r\n)\r\n}\r\n\r\n\r\nexport default withRouter(Header)","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = props => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    placeholder='Search all columns'\r\n    onChange={props.onSearchChange}\r\n  />\r\n);\r\n","import React, { Component } from 'react';\r\n//import * as ReactBottStrap from \"react-bootstrap\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {Alert}  from \"react-bootstrap\";\r\n\r\nvar proxyUrl='https://cors-anywhere.herokuapp.com/';\r\nvar url = \"https://outages-api.herokuapp.com/outages/current\";\r\n\r\nclass CurrentAlarms extends Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        alarms: []\r\n      };\r\n    }\r\n   \r\n    componentDidMount() {\r\n      fetch(proxyUrl + url)\r\n        .then(response => response.json())\r\n        //.then(recent => console.log(recent));\r\n        .then(recent => this.setState({ alarms: recent }));   \r\n      \r\n    }\r\n    onSearchChange = event => {\r\n      this.setState({ searchField: event.target.value });\r\n    };\r\n    \r\n    render() {  \r\n      //const searchField = ;\r\n     \r\n      \r\n      const columns = [{\r\n        dataField: 'service_id',\r\n        text: 'Service ID',\r\n        sort: true,\r\n        \r\n      }, {\r\n        dataField: 'duration',\r\n        text: 'Duration (minutes)',\r\n        sort: true\r\n      }, {\r\n        dataField: 'startTime',\r\n        text: 'Start Time',\r\n        sort: true\r\n      }];\r\n  \r\n  \r\n      const alarms  = this.state.alarms;\r\n      const searchField = this.props.searchField;\r\n      \r\n      const filteredalarms = alarms.filter(alarm => \r\n        \r\n        (alarm.service_id.toString().includes(searchField.toLowerCase()) || \r\n        alarm.duration.toString().includes(searchField.toLowerCase()) ||\r\n        alarm.startTime.toString().includes(searchField.toLowerCase())\r\n        )       \r\n        \r\n      );\r\n      return (\r\n        \r\n          <div >         \r\n            <Alert variant='danger'><h5>Current Alarms</h5></Alert>  \r\n            <div>      \r\n              <BootstrapTable striped keyField='id' data={ filteredalarms } columns={ columns }  /> \r\n            </div>        \r\n          </div>\r\n     \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default CurrentAlarms;","import React, { Component } from 'react';\r\n//import * as ReactBottStrap from \"react-bootstrap\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {Alert}  from \"react-bootstrap\";\r\n\r\nvar proxyUrl='https://cors-anywhere.herokuapp.com/';\r\nvar url = \"https://outages-api.herokuapp.com/flappings\";\r\n\r\nclass FlappingAlarms extends Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        alarms: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(proxyUrl + url)\r\n        .then(response => response.json())\r\n        //.then(recent => console.log(recent));\r\n        .then(recent => this.setState({ alarms: recent }));   \r\n      \r\n    }\r\n    onSearchChange = event => {\r\n      this.setState({ searchField: event.target.value });\r\n    };\r\n   \r\n    render() {  \r\n      \r\n      const columns = [{\r\n        dataField: 'service_id',\r\n        text: 'Service Id',\r\n        sort: true\r\n      }, {\r\n        dataField: 'duration',\r\n        text: 'Duration (minutes)',\r\n        sort: true\r\n      }, {\r\n        dataField: 'start',\r\n        text: 'Start Time',\r\n        sort: true\r\n      },  {\r\n        dataField: 'end',\r\n        text: 'End Time',\r\n        sort: true\r\n      }, {\r\n        dataField: 'amount_outages',\r\n        text: 'Total count',\r\n        sort: true\r\n      }, {\r\n        dataField: 'sum_outages',\r\n        text: 'Total time',\r\n        sort: true\r\n      }];\r\n  \r\n  \r\n      const alarms  = this.state.alarms;\r\n      const searchField = this.props.searchField;\r\n      //console.log(alarms[service_id]);\r\n      const filteredalarms = alarms.filter(alarm => \r\n        //console.log(alarm.service_id.toString().includes(searchField))\r\n        (alarm.amount_outages.toString().includes(searchField.toLowerCase()) || \r\n        alarm.duration.toString().includes(searchField.toLowerCase()) ||\r\n        alarm.end.toString().includes(searchField.toLowerCase())||\r\n        alarm.service_id.toString().includes(searchField.toLowerCase())||\r\n        alarm.start.toString().includes(searchField.toLowerCase())||\r\n        alarm.sum_outages.toString().includes(searchField.toLowerCase())\r\n        )             \r\n        \r\n      );\r\n      return (\r\n        \r\n          <div >         \r\n            <Alert variant='success'><h5>Flapping Alarms</h5></Alert>  \r\n            <div>      \r\n              <BootstrapTable striped keyField='id' data={ filteredalarms } columns={ columns }  /> \r\n            </div>        \r\n          </div>\r\n     \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default FlappingAlarms;","import React, { Component } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {Alert}  from \"react-bootstrap\";\r\n\r\nvar proxyUrl='https://cors-anywhere.herokuapp.com/';\r\nvar url = \"https://outages-api.herokuapp.com/outages/recent:1440\";\r\n\r\nclass RecentAlarms extends Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        alarms: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(proxyUrl + url)\r\n        .then(response => response.json())\r\n        //.then(recent => console.log(recent));\r\n        .then(recent => this.setState({ alarms: recent }));   \r\n      \r\n    }\r\n    onSearchChange = event => {\r\n      this.setState({ searchField: event.target.value });\r\n    };\r\n   \r\n    render() {  \r\n      \r\n      const columns = [{\r\n        dataField: 'service_id',\r\n        text: 'Service ID',\r\n        sort: true,\r\n        \r\n      }, {\r\n        dataField: 'duration',\r\n        text: 'Duration (minutes)',\r\n        sort: true\r\n      }, {\r\n        dataField: 'startTime',\r\n        text: 'Start Time',\r\n        sort: true\r\n      }];\r\n  \r\n  \r\n      const alarms  = this.state.alarms;\r\n      const searchField = this.props.searchField;\r\n      //console.log(alarms[service_id]);\r\n      const filteredalarms = alarms.filter(alarm => \r\n        //console.log(alarm.service_id.toString().includes(searchField))\r\n        (alarm.service_id.toString().includes(searchField.toLowerCase()) || \r\n        alarm.duration.toString().includes(searchField.toLowerCase()) ||\r\n        alarm.startTime.toString().includes(searchField.toLowerCase())\r\n        )       \r\n        \r\n      );\r\n      return (\r\n        <div>        \r\n         \r\n          <div >         \r\n            <Alert variant='warning'><h5>Recent Alarms - Last 24h</h5></Alert>            \r\n            <BootstrapTable striped keyField='id' data={ filteredalarms } columns={ columns }  />      \r\n          </div>\r\n        \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default RecentAlarms ","import React, { Component } from 'react';\r\n//import * as ReactBottStrap from \"react-bootstrap\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {Alert}  from \"react-bootstrap\";\r\n\r\n\r\nvar proxyUrl='https://cors-anywhere.herokuapp.com/';\r\nvar url = \"https://outages-api.herokuapp.com/outages\";\r\n\r\nclass AllAlarms extends Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        alarms: []\r\n      };\r\n    }\r\n   \r\n   \r\n    componentDidMount() {\r\n      fetch(proxyUrl + url)\r\n        .then(response => response.json())\r\n        //.then(recent => console.log(recent));\r\n        .then(recent => this.setState({ alarms: recent }));   \r\n      \r\n    }\r\n    onSearchChange = event => {\r\n      this.setState({ searchField: event.target.value });\r\n    };\r\n    \r\n    render() {  \r\n      //const searchField = ;\r\n     \r\n      \r\n      const columns = [{\r\n        dataField: 'service_id',\r\n        text: 'Service ID',\r\n        sort: true,\r\n        \r\n      }, {\r\n        dataField: 'duration',\r\n        text: 'Duration (minutes)',\r\n        sort: true\r\n      }, {\r\n        dataField: 'startTime',\r\n        text: 'Start Time',\r\n        sort: true\r\n      }];\r\n  \r\n  \r\n      const alarms  = this.state.alarms;\r\n      const searchField = this.props.searchField;\r\n      \r\n      const filteredalarms = alarms.filter(alarm => \r\n        \r\n        (alarm.service_id.toString().includes(searchField.toLowerCase()) || \r\n        alarm.duration.toString().includes(searchField.toLowerCase()) ||\r\n        alarm.startTime.toString().includes(searchField.toLowerCase())\r\n        )       \r\n        \r\n      );\r\n      return (\r\n        \r\n          <div >         \r\n            <Alert variant='info'><h5>All Alarms</h5></Alert>  \r\n            <div>      \r\n              <BootstrapTable striped keyField='id' data={ filteredalarms } columns={ columns }  /> \r\n            </div>        \r\n          </div>\r\n     \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default AllAlarms;","import React, { useState } from 'react';\r\nimport {Form, Button,Col} from \"react-bootstrap\";\r\n\r\nvar proxyUrl='https://cors-anywhere.herokuapp.com/';\r\nvar url = \"https://outages-api.herokuapp.com/outages\";\r\n\r\n\r\nexport default function AddAlarm() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n        const [alarm, setAlarm] = useState();\r\n        const [start, setStart] = useState('');\r\n        const [duration, setDuration] = useState(0);\r\n        const alarmInstance = {\"service_id\":parseInt(alarm),\"startTime\":start.toString(),\"duration\":parseInt(duration)};\r\n        const [show, setShow] = useState(false);\r\n        return (\r\n            <div style={{}}>\r\n            <div style={{marginLeft: '120px', background: 'lightblue',height: '250px', justifycontent: 'center', marginTop: '50px', width: '700px' }}>\r\n                \r\n            <style type=\"text/css\">\r\n                    {`\r\n                    \r\n                    .btn-flat {\r\n                    background-color: rgb(165, 204, 216);\r\n                    color: white;\r\n                    }\r\n\r\n                    .btn-xxl {\r\n                    padding: 1rem 1.5rem;\r\n                    font-size: 1.5rem;\r\n                    }\r\n                    `}\r\n            </style>\r\n            <br />     \r\n           \r\n            <Form>\r\n            <Form.Row >\r\n                <Form.Label column=\"sm\" lg={2}>\r\n                    \r\n                </Form.Label>\r\n                <Col xs={8} >\r\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Alarm id\" onChange={e=>setAlarm(e.target.value)}/>\r\n                </Col>\r\n            </Form.Row>\r\n            <br />\r\n\r\n            <Form.Row >\r\n                <Form.Label column=\"sm\" lg={2}>\r\n                    \r\n                </Form.Label>\r\n                <Col xs={8}>\r\n                <Form.Control size=\"sm\" type=\"number\" placeholder=\"Duration\" onChange={e=>setDuration(e.target.value)} />\r\n                </Col>\r\n            </Form.Row>\r\n            <br />\r\n\r\n            <Form.Row>\r\n                <Form.Label column=\"sm\" lg={2}>\r\n                    \r\n                </Form.Label>\r\n                <Col xs={8}>\r\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Start Time\" onChange={e=>setStart(e.target.value)}/>\r\n                </Col>\r\n            </Form.Row>\r\n            <br />\r\n\r\n            <Button variant=\"flat\" type=\"submit\"\r\n            onClick={async() =>{\r\n                const response = await fetch(proxyUrl + url ,{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n\r\n                    },\r\n                    body: JSON.stringify(alarmInstance)\r\n                });\r\n                response.ok?alert(JSON.stringify(\"Added successfuly!\")):setShow(false);\r\n                \r\n\r\n             }}\r\n            \r\n            >   Add\r\n            </Button >\r\n           \r\n            </Form>\r\n\r\n            \r\n               \r\n             \r\n            \r\n            \r\n    </div>\r\n    \r\n    </div>\r\n   \r\n  );\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport CurrentAlarms from './components/current-alarms.component.jsx';\r\nimport FlappingAlarms from './components/flapping-alarms.component.jsx';\r\nimport RecentAlarms from './components/recent-alarms.component.jsx';\r\nimport AllAlarms from './components/all-alarms.component.jsx';\r\nimport AddAlarm from './components/add-alarm.component.jsx';\r\n\r\n\r\n\r\n \r\nfunction AppRouter(props){\r\n    \r\n return(\r\n      <div> \r\n      \r\n      <div className='App'>   \r\n     \r\n       \r\n      <Switch>                             \r\n        <Route  exact path='/current' component={() => <CurrentAlarms searchField={props.searchField}/>} />\r\n        <Route  exact path='/recent' component={() => <RecentAlarms searchField={props.searchField}/>} />\r\n        <Route  exact path='/flapping' component={() => <FlappingAlarms searchField={props.searchField}/>} />\r\n        <Route  exact path='/all' component={() => <AllAlarms searchField={props.searchField}/>} />\r\n        <Route  exact path='/add' component={() => <AddAlarm searchField={props.searchField}/>} />\r\n        \r\n       \r\n \r\n      </Switch>\r\n        \r\n      </div>\r\n      </div>\r\n    )\r\n  \r\n }\r\n\r\nexport default AppRouter;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header/header.component.jsx';\nimport {SearchBox} from './components/search-box.component';\nimport AppRouter from './AppRouter.jsx'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {      \n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('/outages/recent:80000')\n      .then(response => response.json())\n      .then(recent => this.setState({ alarms: recent }));   \n    \n  }\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n \n  render() {  \n        \n        \n    \n    return (\n      <div> \n      <div>  \n            <Header/>\n      </div>,\n      <div className='App'>   \n      <SearchBox onSearchChange={this.onSearchChange} />  \n       \n      <AppRouter searchField={this.state.searchField}/>\n        \n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}